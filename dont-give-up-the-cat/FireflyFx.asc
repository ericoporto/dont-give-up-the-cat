// new module script

#define FIREFLY_MAX_LIFE 160
#define FIREFLY_MAX_LIFE_HALF 80
#define FLIREFLY_XSPEED_OFFSET 0.45
#define FLIREFLY_YSPEED_OFFSET 0.12
#define FLIREFLY_ZSPEED_OFFSET 0.45

Mode7World m7_tmp;

float _GetRandSign()
{
  bool is_negative = Random(1024) < 512;
  if(is_negative) return -1.0;
  return 1.0;
}

 bool _IsPlayerInFireflyRegion()
{
  return (player.x > 124 && player.x < 281 && player.y > 473 && player.y < 598) ||
         (player.x > 1098 && player.x < 1176 && player.y > 1066 && player.y < 1137) ||
         (player.x > 410 && player.x < 514 && player.y > 1244 && player.y < 1322) ||
         (player.x > 1458 && player.x < 1572 && player.y > 414 && player.y < 514);
}

protected void FireflyFx::_DestroyFly(int i)
{
  this.M7Object[i].Visible = false;
}

protected void FireflyFx::_CreateFly(int i)
{  
  Mode7Object* m7o = this.M7Object[i];
  
  this._Life[i] = Random(FIREFLY_MAX_LIFE/3);
  m7o.Visible = true;
  m7o.X = RoomToWorldX(player.x) + IntToFloat((32 + Random(48)))*_GetRandSign();
  m7o.Z = RoomToWorldZ(player.y) + IntToFloat((32 + Random(48)))*_GetRandSign();
  m7o.Y = IntToFloat(Random(44)+8);
  m7o.Graphic = SPR_FIREFLY_0+Random(4);
  
  float speed_x = FLIREFLY_XSPEED_OFFSET*IntToFloat(Random(100)-50)/50.0;
  float speed_y = FLIREFLY_YSPEED_OFFSET*IntToFloat(Random(100)-50)/50.0;
  float speed_z = FLIREFLY_ZSPEED_OFFSET*IntToFloat(Random(100)-50)/50.0;
  
  this._SpeedX[i] = speed_x/4.0;
  this._SpeedY[i] = speed_y/4.0;
  this._SpeedZ[i] = speed_z/4.0;
}

void FireflyFx::Init()
{
  for(int i=0; i<FIREFLY_COUNT; i++)
  {
    Mode7Object* m7o = m7_tmp.AddObject(0, 0, 0.5, SPR_FIREFLY_0);
    m7o.Visible = false;
    this.M7Object[i] = m7o;
  }
  
  m7_tmp.RemoveAllsObjects();
}

void FireflyFx::Update()
{  
  for(int i=0; i<FIREFLY_COUNT; i++)
  {
    Mode7Object* m7o = this.M7Object[i];
    
    this._Life[i]++;
    int life = this._Life[i];
    
    bool in_firefly_region = _IsPlayerInFireflyRegion();
    
    if(life < FIREFLY_MAX_LIFE) {
      m7o.Transparency = (100*(life-FIREFLY_MAX_LIFE_HALF))/FIREFLY_MAX_LIFE_HALF;       
      m7o.X += this._SpeedX[i];
      m7o.Z += this._SpeedZ[i];
      m7o.Y += this._SpeedY[i];
    } else {   
      // reset
      this._DestroyFly(i);
      if(in_firefly_region) this._CreateFly(i);
    }
  }  
}


void FireflyFx::Destroy()
{  
  for(int i=0; i<FIREFLY_COUNT; i++)
  {
    this.M7Object[i].Visible = false;
    this.M7Object[i] = null;
  }
}