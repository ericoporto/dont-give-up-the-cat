// new module script
TypedTextDrawing  _my_ttd;
Character* _c_tt;
Overlay* _ovr_tt;
DynamicSprite* _spr_tt;FontType _my_font;
int _tt_margin;
int _bg_color;
int _tt_bordercolor;

int _filter_skipped_key(int skipreason) {
  if(skipreason == 0) return 0;
  
  if(skipreason & eInputMouse) return skipreason;
  if(skipreason & eInputKeyboard) {
    int key = skipreason & eKeyCodeMask;
    if(key == eKeySpace || key == eKeyReturn) return skipreason;
    else return 0; // ignore other keys
  }
}

void MySay(this Character*, String message) 
{
  FontType font = eFontMenu;
  _bg_color = eAgsColor_BgGreenie;
  int y_offset = 0;
  switch(this.ID) {
    case cGhostFloatingcat.ID:  _tt_bordercolor = eAgsColor_MuteBlue; break;
    case cGhostForgotten.ID: _tt_bordercolor = eAgsColor_Redish; break;
    case cGhostStandingcat.ID: _tt_bordercolor = eAgsColor_DarkBlue; break;
    case cTheNarrator.ID: font = eFontHandwriting; _bg_color = COLOR_TRANSPARENT; _tt_bordercolor = eAgsColor_RealBlack; break;
    case cEndNarrator.ID: font = eFontHandwriting; _bg_color = COLOR_TRANSPARENT; _tt_bordercolor = eAgsColor_RealBlack; y_offset = 16; break;   
    default: font = eFontFont1; _tt_bordercolor = eAgsColor_RealBlack; break;
  }
  
  int box_w = ClampI(GetTextWidth(message, font) + _tt_margin*2+2, 64, Screen.Width);
  int box_h = GetTextHeight(message, font, box_w) + _tt_margin*2+2;
  int box_x = (Screen.Width-box_w)/2;
  int box_y = Screen.Height - box_h - 48 + y_offset;
  
  DynamicSprite* spr = DynamicSprite.Create(box_w, box_h, true);
  Overlay* ovr = Overlay.CreateGraphical(box_x, box_y, spr.Graphic, true);
  ovr.ZOrder = 30000;
  
  _spr_tt = spr;
  _ovr_tt = ovr;
  _c_tt = this;
  
  _my_ttd.SetDrawingRect(_tt_margin, _tt_margin, box_w, box_h);
  _my_ttd.SetDrawingParams(font, eAgsColor_White, _bg_color); 
  _my_ttd.Start(message);
  
  int skipped;
  do {
    skipped = _filter_skipped_key(WaitMouseKey(1));
    if(skipped != 0) {
      _my_ttd.Skip();
      break;
    }
  } while(_my_ttd.IsTextBeingTyped);

  Wait(SecondsToLoops(0.33));

  skipped = 0;
  do {
    skipped = _filter_skipped_key(WaitMouseKey(1));
  } while(skipped == 0);
    
  _my_ttd.Clear(); // clear the text, stop timers ticking, etc
  if(_ovr_tt != null) {
    _ovr_tt.Remove();
    _ovr_tt = null;
  }
  if(_spr_tt != null) {
    _spr_tt.Delete();
    _spr_tt = null;
  } 
}

void DrawTick(DynamicSprite* spr, int text_fg_color, int text_bg_color)
{
  DrawingSurface* surf = null;
  DynamicSprite* tspr_fg = DynamicSprite.Create(spr.Width, spr.Height);
  DynamicSprite* tspr_bg = DynamicSprite.Create(spr.Width, spr.Height);
  
  surf = tspr_fg.GetDrawingSurface();
  _my_ttd.BkgColor = COLOR_TRANSPARENT;
  _my_ttd.TextColor = text_fg_color;
  _my_ttd.Draw(surf);
  surf.Release();
  
  surf = tspr_bg.GetDrawingSurface();
  _my_ttd.BkgColor = COLOR_TRANSPARENT;
  _my_ttd.TextColor = text_bg_color;
  _my_ttd.Draw(surf);
  surf.Release();
  
  surf = spr.GetDrawingSurface();
  surf.Clear(_bg_color);
  surf.DrawImage(-1, 0, tspr_bg.Graphic);
  surf.DrawImage(1, 0, tspr_bg.Graphic);
  surf.DrawImage(0, -1, tspr_bg.Graphic);
  surf.DrawImage(0, 1, tspr_bg.Graphic);
  surf.DrawImage(0, 0, tspr_fg.Graphic);
  surf.Release();
}

Dialog* _delayed_d;

void StartDialog(Dialog* d)
{
  bool_in_dialog = true;
  _delayed_d = d;
}


function game_start()
{ 
  // Config typed text to your liking
  _my_ttd.TypeDelay = 1;
  _my_ttd.CaretFlashOnTime = 4;
  _my_ttd.CaretFlashOffTime = 4;
  _my_ttd.Font = eFontMenu;
  _my_ttd.BkgColor = COLOR_TRANSPARENT;
  _my_ttd.TextColor = 65535;
  _tt_margin = 8;
}

void repeatedly_execute()
{
  if(_delayed_d != null) {
    Dialog* d = _delayed_d;
    _delayed_d = null;
    d.Start();
  }  
}

function repeatedly_execute_always()
{  
  if (_my_ttd.IsActive)
  {
    _my_ttd.Tick(); // update TT
    
    //draw
    DrawTick(_spr_tt, 65535, _tt_bordercolor);
  }
  
}