// room script file
DynamicSprite* ground;
ZoneManager zManager;
Mode7World m7;

Mode7Object* o7home;
Mode7Object* o7player;
Mode7Object* o7grave_house;
Mode7Object* o7grave_flowers;
Mode7Object* o7grave_stones;

Mode7Object* o7ghost_floatingcat;
Mode7Object* o7ghost_forgotten;
Mode7Object* o7ghost_standingcat;

InputParams* hidPlayer;

void update_m7wobjs_from_zmanager()
{
  m7.RemoveAllsObjects();
  
  zManager.ResetObjectActiveZones();
  Mode7Object* obj = zManager.GetNextObjectActiveZones();
  while(obj != null)
  {
    m7.AddExternalObject(obj);
    
    obj = zManager.GetNextObjectActiveZones();
  }
}

void begin_game(int tree_count)
{
  o7ghost_floatingcat = null;
  o7ghost_forgotten = null;

  zManager.WorldWidth = Room.Width;
  zManager.WorldHeight = Room.Height;
  zManager.ZoneXYCount = 8;
    
  hidPlayer = InputParams.NewInputParams(1.4, 4.0, 4.0, 2.0, 2.0);
  
  o7player = zManager.AddObject(r2wX(886), r2wZ(734), 0.36, 2);
  o7player.Visible = false;
  o7player.Angle = Maths.Pi * 0.25;
  
  o7home = zManager.AddObject(r2wX(880), r2wZ(658), 0.5, 27);
    
  o7grave_house = zManager.AddObject(r2wX(1140), r2wZ(1106), 0.36, SPR_GRAVE_HOUSE);
  o7grave_flowers = zManager.AddObject(r2wX(1509), r2wZ(470), 0.5, SPR_GRAVE_FLOWERS);
  o7grave_stones = zManager.AddObject(r2wX(457), r2wZ(1277), 0.5, SPR_GRAVE_STONES);
    
  PositionGenerator pgen;
  pgen.Init(Room.Width, Room.Height, 8);
  
  for(int i=0; i<tree_count; i++)
  {
    int obj_x, obj_y;
    TerrainType obj_terrain;
    do {
      Point* prand = pgen.Generate();
      obj_x = r2wX(prand.x);
      obj_y = r2wZ(prand.y);
      
      obj_terrain = GetTerrainAtRoomXY(w2rX(obj_x), w2rY(obj_y));
    } while (obj_terrain == eTT_Water || obj_terrain == eTT_Clearance);
    
    Mode7Object* m7obj = zManager.AddObject(obj_x, obj_y, 1.0, SpriteFromTerrainType(obj_terrain));
    if(m7obj.Graphic == SPR_GRASS_HIGH) m7obj.Y = -4.0;
  }
  
  update_m7wobjs_from_zmanager();
  
  m7.SetViewscreen(VIEW_SCREEN_WIDTH, VIEW_SCREEN_HEIGHT);
  // m7.SetBgColor(19544); // water
  m7.SetBgColor(BG_COLOR);
  m7.SetSkyColor(BG_COLOR);
 // m7.SetSkyColor(12716);
  create_depth_fog(BG_COLOR, 10000);
    
  DrawingSurface* surf = Room.GetDrawingSurfaceForBackground();
  ground = DynamicSprite.CreateFromDrawingSurface(surf, 0, 0, Room.Width, Room.Height);
  surf.Release();
  
  m7.SetGroundSprite(ground.Graphic);
  m7.SetHorizonSprite(SPR_HORIZON);
  skybox_create(BG_COLOR, SPR_HORIZON);
  m7.SetCamera(o7player.X, o7player.Y + 6.0, o7player.Z, 0.0, 0.0, 175.0);
}

// room events
function room_Load()
{
  begin_game(/* obj count*/ 4020);
}

function room_RepExec()
{
  if (IsGamePaused()) { 
    if(!mouse.Visible) mouse.Visible = true;
    return;
  }
  if(mouse.Visible) mouse.Visible = false;
  
  input_player(o7player, hidPlayer);
  
  m7.CameraAngleX = hidPlayer.AngleX;  
  m7.TargetCamera(o7player.X, o7player.Y, o7player.Z, o7player.Angle, eCameraTarget_FirstPerson);
  
  zManager.UpdateCurrentPos(o7player.X, o7player.Z);    
  if(zManager.ZoneChanged)
  {
    update_m7wobjs_from_zmanager();
  }  
  m7.UpdateObjects(false);
  
  // determine rotating objects sprite
  if(o7home.Visible) {
    o7home.Graphic = GetGraphicFromAngle(m7.GetAngleObjectAndCamera(o7home), 2, SPR_HOME_ANGL_000, SPR_HOME_ANGL_358);
  }
  
  // animate ghosts as needed
  if(o7ghost_floatingcat != null && o7ghost_floatingcat.Visible) {
    o7ghost_floatingcat.Y = 26.0 + 8.0*Maths.Sin(Maths.Pi * IntToFloat( Frame % 64)/ 32.0);
  }  
  if(o7ghost_forgotten != null && o7ghost_forgotten.Visible) {
    o7ghost_forgotten.Y = 24.0 + 8.0*Maths.Sin(Maths.Pi * IntToFloat( Frame % 64)/ 32.0);
  }
  if(o7ghost_standingcat != null && o7ghost_standingcat.Visible) {
    o7ghost_standingcat.Y = 8.0 + 4.0*Maths.Sin(Maths.Pi * IntToFloat( Frame % 64)/ 32.0);
  }
  
  m7.Draw();
  m7.DrawObjectsOverlay();
}

function on_mouse_click(MouseButton button)
{
  if (IsGamePaused()) {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  } else if (button == eMouseLeft) {
    if(do_claw())
    {
      float sin = Maths.Sin(Maths.DegreesToRadians(o7player.Angle));
      float cos = Maths.Cos(Maths.DegreesToRadians(o7player.Angle));
      float x = o7player.X + 8.0 * sin;
      float z = o7player.Z - 8.0 * cos;
      
      Mode7Object* obj = m7.GetObject(x, z, 32.0, CLAWABLE_GRAPHICS_COUNT, clawable_graphics);
      obj = clawn_object(obj);
      if(obj == null) return;
      if(obj == o7grave_flowers && o7ghost_floatingcat == null) {
        o7ghost_floatingcat = zManager.AddObject(
          FloatToInt(o7grave_flowers.X)+1, FloatToInt(o7grave_flowers.Z)+1, 0.36, SPR_GHOST_FLOATINGCAT
          );
        update_m7wobjs_from_zmanager();
      }
      if(obj == o7grave_house && o7ghost_forgotten == null) {
        o7ghost_forgotten = zManager.AddObject(
          FloatToInt(o7grave_house.X)-2, FloatToInt(o7grave_house.Z)-2, 0.36, SPR_GHOST_FORGOTTEN
          );
        update_m7wobjs_from_zmanager();          
      }
      if(obj == o7grave_stones && o7ghost_standingcat == null) {
        o7ghost_standingcat = zManager.AddObject(
          FloatToInt(o7grave_stones.X)+1, FloatToInt(o7grave_stones.Z)+2, 0.36, SPR_GHOST_STANDINGCAT
          );
        update_m7wobjs_from_zmanager();          
      }
    }
  }
}

void on_key_press(eKeyCode k, int mod) {
  //m7.DebugKeyPress(k); 
}
