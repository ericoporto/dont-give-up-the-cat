// new module script
 
void BreathingSfx::Init()
{
  Sound_BreathPlay(aCat_breath);
}

void BreathingSfx::Update(InputParams* p)
{
  int volume, speed;
  
  if (p.CurrentSpeed > p.MaxSpeedForward && !p.BlockedByWall) {
    if(this.BreathMeter < 300) this.BreathMeter+=2;
    this.TargetVolume = 0.0;
    this.BeganBreathing = false;
  }
  
  if (p.CurrentSpeed == 0.0 && this.BreathMeter > 0) {
    this.BreathMeter-=1;
  }
  
  if(p.CurrentSpeed == 0.0) {
    if(!this.BeganBreathing) Sound_BreathSetRandomInitTime();    
    this.BeganBreathing = true;
    
    this.TargetVolume = Lerp(this.TargetVolume, IntToFloat(ClampI(this.BreathMeter, 0, 100)), 0.05);
    volume = ClampI(FloatToInt(this.TargetVolume), 0, 100);
    speed = ClampI(this.BreathMeter*20, 1000, 2700);
    
    p.OffsetY = IntToFloat(volume)*Maths.Sin(Maths.Pi*IntToFloat(this.BreathMeter%96)/48.0)/512.0;
    
  } else {
    volume = 0;
    speed = 1000;
    p.OffsetY = 0.0;
  }
  
  Sound_BreathAdjust(volume, speed);
}

void BreathingSfx::Destroy()
{
  Sound_BreathStop();
}