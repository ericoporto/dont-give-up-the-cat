// new module script
#define SMOKE_FRAMES 8
#define SMOKE_MAX_LIFE 120
#define SMOKE_INIT_HEIGHT 96.0

int _getSprForLife(int life, int max_life) { return SPR_SMOKE_0 + ((life*SMOKE_FRAMES)/max_life); }

Mode7World m7_tmp;

void SmokeFx::Init(int room_x, int room_y, float init_height, int smoke_max_life, int smoke_particles)
{
  if(smoke_max_life <= 0) smoke_max_life = SMOKE_MAX_LIFE;
  if(init_height == 0.0) init_height = SMOKE_INIT_HEIGHT;
  if(smoke_particles <= 0) smoke_particles = 8;
  if(smoke_particles > SMOKE_COUNT) smoke_particles = SMOKE_COUNT;
  
  this._RoomX = room_x;
  this._RoomY = room_y;
  this._InitHeight = init_height;
  this._MaxLife = smoke_max_life;
  this.SmokeCount = smoke_particles;
  
  for(int i=0; i<this.SmokeCount; i++)
  {
    Mode7Object* m7oSmoke = m7_tmp.AddObject(room_x, room_y, 0.5, SPR_SMOKE_0);
    int life = Random(this._MaxLife-1);
    m7oSmoke.Y = this._InitHeight + IntToFloat(life);
    this._Life[i] = life;
    this.M7Object[i] = m7oSmoke;
  }
  
  m7_tmp.RemoveAllsObjects();
}

void SmokeFx::Update()
{  
  for(int i=0; i<this.SmokeCount; i++)
  {
    Mode7Object* m7oSmoke = this.M7Object[i];
    
    this._Life[i]++;
    
    if(this._Life[i] < this._MaxLife) {
      m7oSmoke.Graphic = _getSprForLife(this._Life[i], this._MaxLife);
      m7oSmoke.X += IntToFloat(Random(4)-2)/2.0;
      m7oSmoke.Z += IntToFloat(Random(4)-2)/2.0;
      m7oSmoke.Y += 1.0;
    } else {   
      // reset
      this._Life[i] = 0;
      m7oSmoke.X = RoomToWorldX(this._RoomX);
      m7oSmoke.Z = RoomToWorldZ(this._RoomY);
      m7oSmoke.Y = this._InitHeight;
      m7oSmoke.Graphic = _getSprForLife(this._Life[i], this._MaxLife);  
    }
  }  
}