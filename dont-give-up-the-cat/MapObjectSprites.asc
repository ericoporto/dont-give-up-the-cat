// new module script

//DynamicSprite* spr_big_tree;
//DynamicSprite* spr_tree;

int SpriteFromTerrainType(TerrainType terrain_type)
{  
  int gfx;
  if(terrain_type == eTT_Land) {
    gfx = SPR_GRASS_LOW;
  } else if(terrain_type == eTT_LandBorder) {
    gfx = SPR_GRASS_HIGH;      
  } else if(terrain_type == eTT_Tree) {
    int rnd = Random(15);
    gfx = SPR_GRASS_HIGH;
    if(rnd == 4) gfx = SPR_TREE_SMALL;
    if(rnd == 5) gfx = SPR_TREE_BIG;
  } else if(terrain_type == eTT_Flowers) {
    int rnd = Random(2);
    gfx = SPR_FLOWER_0 + rnd;
  } else if(terrain_type == eTT_FlowersBlue) {
    int rnd = Random(1);
    gfx = SPR_FLOWER_BLUE_0 + rnd;
  } else if(terrain_type == eTT_BlueRock) {
    int rnd = Random(2);
    gfx = SPR_BLUEROCK_1;
    if(rnd == 1) gfx = SPR_BLUEROCK_0;
  } else if(terrain_type == eTT_GrassyRock) {
    int rnd = Random(3);
    gfx = SPR_GRASSYROCK;
    if(rnd == 3) gfx = SPR_GRASS_HIGH;      
  } else {
    // eTT_TreeHeavy
    int rnd = Random(2);
    gfx = SPR_TREE_SMALL;
    if(rnd == 2) gfx = SPR_TREE_SMALL;
    if(rnd == 1) gfx = SPR_TREE_BIG;       
  } 
  return gfx;
}

int ObjSpriteAsClawed(int sprite)
{    
  switch(sprite) {
    case SPR_TREE_BIG: return SPR_TREE_BIG_CUT; break;
    case SPR_TREE_SMALL: return SPR_TREE_SMALL_CUT; break;
    case SPR_FLOWER_0: return SPR_FLOWER_CUT_0; break;
    case SPR_FLOWER_1: return SPR_FLOWER_CUT_1; break;
    case SPR_FLOWER_2: return SPR_FLOWER_CUT_2; break;   
    case SPR_FLOWER_BLUE_0: return SPR_FLOWER_BLUE_CUT_0; break;
    case SPR_FLOWER_BLUE_1: return SPR_FLOWER_BLUE_CUT_1; break;                 
  }
  return -1;
}