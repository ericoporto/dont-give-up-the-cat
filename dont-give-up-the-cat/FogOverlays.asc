// new module script
#define FOG_COUNT 8

struct Fog {
  Overlay* ovr;
  DynamicSprite* dynspr;
  int y_factor;
};

Fog _fog[FOG_COUNT];

void _create_fog(int i, int color, int z_span)
{
  int j = i + 1;
  int hi = i - 1;
  if(hi < 0) hi = 0;
  int height = (180/((FOG_COUNT - 1) - hi) + ((180*j)/FOG_COUNT))/2;
  int width = Screen.Width;
  
  _fog[i].dynspr = DynamicSprite.Create(width, height, true);
  DrawingSurface* surf = _fog[i].dynspr.GetDrawingSurface();
  surf.Clear(color);
  surf.Release();
  
  int x = 0;
  int y = (Screen.Height - height)/2;
  _fog[i].ovr = Overlay.CreateGraphical(x, y, _fog[i].dynspr.Graphic, true);
  _fog[i].ovr.Transparency = 50;
  _fog[i].ovr.ZOrder = 1 + z_span * j / 1000 ;
  _fog[i].y_factor = -height/2;
}

void create_depth_fog(int color, int z_span)
{
  for(int i=0; i<FOG_COUNT; i++)
  {
    _create_fog(i, color, z_span);
  }
}

void sync_horizon(int horizon_y)
{
  for(int i=0; i<FOG_COUNT; i++)
  {
    _fog[i].ovr.Y = horizon_y + _fog[i].y_factor;
  }
}
