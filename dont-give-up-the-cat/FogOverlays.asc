// new module script
#define FOG_COUNT 16

struct Fog {
  Overlay* ovr;
  DynamicSprite* dynspr;
  int y_factor;
};

Fog _fog[FOG_COUNT];

void _create_fog(int i, int color, int z_span, int transparency)
{
  int j = i + 1;
  int hi = i - 1;
  if(hi < 0) hi = 0;
  int height = (180/((FOG_COUNT - 1) - hi) + ((180*j)/FOG_COUNT))/2;
  int width = Screen.Width;
  
  _fog[i].dynspr = DynamicSprite.Create(width, height, true);
  DrawingSurface* surf = _fog[i].dynspr.GetDrawingSurface();
  surf.Clear(color);
  surf.Release();
  
  int x = 0;
  int y = (Screen.Height - height)/2;
  int z_order = 1 + z_span * j / ((FOG_COUNT * 125));
  z_order = z_order * j / FOG_COUNT;
  //z_order = z_order * j / FOG_COUNT;
  _fog[i].ovr = Overlay.CreateGraphical(x, y, _fog[i].dynspr.Graphic, true);
  if(transparency <= 0) {
    _fog[i].ovr.Transparency = ClampI(100 - 400/FOG_COUNT, 20, 60);
  } else {
    _fog[i].ovr.Transparency = transparency;
  }
  _fog[i].ovr.ZOrder = z_order;
  _fog[i].y_factor = -height/2;
}

void create_depth_fog(int color, int z_span, int transparency)
{
  for(int i=0; i<FOG_COUNT; i++)
  {
    _create_fog(i, color, z_span, transparency);
  }
}

void sync_horizon(int horizon_y)
{
  for(int i=0; i<FOG_COUNT; i++)
  {
    _fog[i].ovr.Y = horizon_y + _fog[i].y_factor;
  }
}

void destroy_fogs()
{
  for(int i=0; i<FOG_COUNT; i++)
  {
    Overlay* ovr = _fog[i].ovr;
    if(ovr != null && ovr.Valid) {
      ovr.Remove();
    }
    _fog[i].ovr = null;
    
    DynamicSprite* dynspr = _fog[i].dynspr;
    if(dynspr != null) {
      dynspr.Delete();
    }
    _fog[i].dynspr = null;
  }  
}