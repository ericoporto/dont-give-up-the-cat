// new module script
Timer * tVisibleFalseAfter;

void CustomTransition_IntantFadeIn(){
  gCustomTransition.Visible = false;
  gCustomTransition.Transparency = 100;
}

void CustomTransition_IntantFadeOut(){
  gCustomTransition.Visible = true;
  gCustomTransition.Transparency = 0;
}

bool CustomTransition_isOn(){
  return gCustomTransition.Visible ;
}

void CustomTransition_FadeIn(float ftime , TweenStyle blocking, float delay, eAgsColor color){
  if(FloatToInt(ftime) == 0){
    ftime = 0.3;
  }
  gCustomTransition.BackgroundColor = color;
  gCustomTransition.BorderColor = color;
  if (!Game.SkippingCutscene){
    gCustomTransition.Transparency = 0;
    gCustomTransition.Visible = true;
    tVisibleFalseAfter = Timer.StartRT(ftime+delay, eOnce);
    gCustomTransition.TweenTransparency(ftime, 100, eEaseLinearTween, blocking, delay);
  } else {
    CustomTransition_IntantFadeIn();
  }
  
}

void CustomTransition_FadeOut(float ftime , TweenStyle blocking, float delay, eAgsColor color){
  if(FloatToInt(ftime) == 0){
    ftime = 0.3;
  }
  gCustomTransition.BackgroundColor = color;
  gCustomTransition.BorderColor = color;
  if (!Game.SkippingCutscene){
    gCustomTransition.Transparency = 100;
    gCustomTransition.Visible = true;
    gCustomTransition.TweenTransparency(ftime, 0, eEaseLinearTween, blocking, delay);
  } else {
    CustomTransition_IntantFadeOut();
  }
}
function repeatedly_execute_always() {
  if(IsGamePaused() == 1  || !System.HasInputFocus){
    return;  
  }
  
  if(tVisibleFalseAfter!=null){
    if(tVisibleFalseAfter.EvtExpired){
      tVisibleFalseAfter=null;
      gCustomTransition.Visible = false;
    }  
  }
}