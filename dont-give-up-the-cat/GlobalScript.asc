// main global script file

// called when the game starts, before the first room is loaded
function game_start()
{
  // show FPS
  //Debug(4, 1);
  
  
  SetGameSpeed(GAME_SPEED);
  
  if(System.OperatingSystem == eOSWeb)
  {
    Mouse.SetBounds(0, 0, Screen.Width, Screen.Height);
    System.Windowed = false;
    Mouse.ControlEnabled = true;
   // SetGameSpeed(GAME_SPEED/2);
  }
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
  if(System.OperatingSystem == eOSWeb) {
    if(System.Windowed == true) {
      if (!IsGamePaused() && player.Room == 1)
      {
        Menu.Show();
      }
    }
  }
}

// called when a key is pressed
function on_key_press(eKeyCode keycode, int mod)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyQ && (mod & eKeyModCtrl))
  {
    // Ctrl-Q will quit the game
   // QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (mod & eKeyModCtrl)
  {
    if (keycode == eKeyS)
    {
      // Ctrl-S will give the player all defined inventory items
      Debug(0, 0);
    }
    else if (keycode == eKeyV)
    {
      // Ctrl-V will show game engine version and build date
      Debug(1, 0);
    }
    else if (keycode == eKeyA)
    {
      // Ctrl-A will show walkable areas
      Debug(2, 3);
    }
    else if (keycode == eKeyX)
    {
      // Ctrl-X will let the player teleport to any room
      Debug(3, 0);
    }
  }
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}

function dialog_request(int param) {
}

function btn_menu_any_OnClick(GUIControl *control, MouseButton button)
{
  Menu.OnClick(control, button);
}

function slider_opt_volume_OnChange(GUIControl *control)
{
  System.Volume = slider_opt_volume.Value;
}
