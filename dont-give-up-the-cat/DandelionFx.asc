// new module script
#define DANDELION_FRAMES 5
#define DANDELION_MAX_LIFE 16
#define DANDELION_INVALID_POS_ROOM -2048
#define DANDELION_INVALID_POS_WORLD -1024.0

Mode7World m7_tmp;

int _getSprForLife(int life)
{
  return SPR_DANDELION_PARTICLE_0 + (life*DANDELION_FRAMES)/DANDELION_MAX_LIFE;
}

float _floatRandom(float range)
{
  return range * (IntToFloat(Random(2048))/2048.0);
}

float _GetRandSign()
{
  bool is_negative = Random(1024) < 512;
  if(is_negative) return -1.0;
  return 1.0;
}

void DandelionFx::Init()
{
  for(int i=0; i<DANDELION_MAX; i++)
  {
    Mode7Object* m7o = m7_tmp.AddObject(DANDELION_INVALID_POS_ROOM, DANDELION_INVALID_POS_ROOM, 0.5, SPR_DANDELION_PARTICLE_0);
    this.M7Object[i] = m7o;
  }
  
  for(int i=0; i<DANDELION_MAX; i++)
  {
    this._Life[i] = DANDELION_MAX_LIFE+1;
  }  
}

void DandelionFx::CreateAt(Mode7Object* dandelionOrigin)
{
  // find available dandelion and set index of it
  int index = -1;
  for(int i=0; i<DANDELION_MAX; i++)
  {
    if(this._Life[i] >= DANDELION_MAX_LIFE) {
      index = i;
      break;
    }
  }  
  if(index == -1) return; // failed to find available dandelion
  
  // init dandelion
  int ogfx = dandelionOrigin.Graphic;
  this._Life[index] = 0;
  this._DandDirX[index] = _GetRandSign() * (_floatRandom(0.125) + 0.125);
  this._DandDirZ[index] = _GetRandSign() * (_floatRandom(0.125) + 0.125);
  float dx = (dandelionOrigin.X - RoomToWorldX(player.x));
  float dz = (dandelionOrigin.Z - RoomToWorldZ(player.y));
  float sign_x = -dx/(AbsF(dx)+0.1);
  float sign_z = -dz/(AbsF(dz)+0.1);
  Mode7Object* m7o = this.M7Object[index];
  m7o.X = dandelionOrigin.X + sign_x*(_floatRandom(5.0) + 1.0);
  m7o.Z = dandelionOrigin.Z + sign_z*(_floatRandom(5.0) + 1.0);
  if(ogfx == SPR_TREE_BIG || ogfx == SPR_TREE_SMALL) {
    m7o.Y = dandelionOrigin.Y + 12.0 + _floatRandom(4.0);
  } else {
    m7o.Y = dandelionOrigin.Y + 8.0 + _floatRandom(4.0);
  }
  m7o.Factor = dandelionOrigin.Factor;
  m7o.Visible = true;
  m7o.Graphic = SPR_DANDELION_PARTICLE_0;
}

void DandelionFx::Update()
{  
  for(int i=0; i<DANDELION_MAX; i++)
  {
    if(this._Life[i] > DANDELION_MAX_LIFE) continue;
    
    Mode7Object* m7o = this.M7Object[i];
    
    if(this._Life[i] == DANDELION_MAX_LIFE) {
      m7o.Visible = false;
      m7o.X = DANDELION_INVALID_POS_WORLD;
      m7o.Z = DANDELION_INVALID_POS_WORLD;
      m7o.Y = 0.0;
      m7o.Graphic = 0;
    } else {    
      m7o.Graphic = _getSprForLife(this._Life[i]);
      m7o.X += this._DandDirX[i];
      m7o.Z += this._DandDirZ[i];
      m7o.Y += 0.25;
    }
    
    this._Life[i]++;
  }  
}

DandelionFx dandelion_fx;
export dandelion_fx;